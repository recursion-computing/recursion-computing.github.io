{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["handleRefresh","window","location","reload","handleLinkedin","open","handleGithub","handleMail","handleTwitter","handleYouTube","handlePublications","handleNotes","handleDiscord","handleNick","Quote","quotes","quote","Math","floor","random","length","console","log","id","onClick","App","className","params","particles","opacity","color","number","value","size","line_linked","distance","move","speed","background","image","interactivity","events","onhover","enable","mode","src","alt","href","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.76d30398.chunk.js","sourcesContent":["import React from 'react';\n// import ParticleField from 'react-particles-webgl';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nfunction handleRefresh() {\n  window.location.reload();\n}\n\nfunction handleLinkedin() {\n  window.open(\"https://www.linkedin.com/company/recursion-computing\", '_blank');\n}\n\nfunction handleGithub() {\n  window.open(\"https://github.com/recursion-computing\", '_blank');\n}\n\nfunction handleMail() {\n  window.open(\"mailto:info@recursion.is\", '_blank');\n}\n\nfunction handleTwitter() {\n  window.open(\"https://twitter.com/RecursionIs\", '_blank');\n}\n\nfunction handleYouTube() {\n  window.open(\"https://recursion.is/youtube\", '_blank');\n}\n\nfunction handlePublications() {\n  window.open(\"https://publications.recursion.is/\", '_blank');\n}\n\nfunction handleNotes() {\n  window.open(\"https://notes.recursion.is/\", '_blank');\n}\n\nfunction handleDiscord() {\n  window.open(\"https://discord.gg/2kSSsvTVc3\", '_blank');\n}\nfunction handleNick() {\n  window.open(\"https://nickmaleki.com\", '_blank');\n}\n\nfunction Quote() {\n  var quotes = [\n    'Connecting your thoughts, so you don\\'t have to ',\n    'Unbounded thinking',\n    'Thinking about thinking - a meta-analysis',\n    'Fixing broken things, breaking working things',\n    'The Y combinator of thought',\n    'Applied philosophy',\n    'Applied repetition',\n    'Recognizing your potential by taking transparency to the extreme',\n    'True and False',\n    'Neither True nor False',\n    'From the perspective of zero, everything is infinity',\n    'From the perspective of infinity, everything is zero',\n    '\"I would rather regret something I did, than something I didn\\'t.\"',\n    '\"Steal from the best, invent the rest.\" - Micheal Corsetto',\n    '\"You will never get younger than now.\"',\n    '\"There are no differences but differences of degree between different degrees of difference and no difference.\" - William James',\n    '“Time is the most valuable thing a person can spend.” - Theophrastus',\n    '“Sooner or later, everything old is new again.” - Steven King',\n    '\"That which can be destroyed by the truth should be.\" - Patricia Christine Hodgell',\n    '\"Life itself is an exercise in exceptions.\" - Jean-Luc Picard',\n    '\"This independence created by philosophical insight is - in my opinion - the mark of distinction between a mere artisan or specialist and a real seeker after truth.\" - Albert Einstein',\n    '\"It is okay to make mistakes as long as things are happening.\"',\n    '\"The inventors of the alphabet were unable to read until after they created letters.\" - u/SirHerald',\n    '\"Because Nothing was, therefore All Things are.\" - Edgar Allen Poe',\n    '\"Space and duration are one.\" - Edgar Allen Poe',\n    '\"Rhythmic Balanced Interchange\" - Walter Russell',\n    '\"We can\\'t talk about how reality functions without sounding crazy.\" - Jack Krause',\n    '\"We can\\'t just focus on one field of science, we must focus on all of them.\" - Nick Maleki',\n    '\"Both infinity and zero are infinitely certain.\" - Nick Maleki',\n    '\"A transparent vessel, like the glass cup, is inevitable.\" - Nick Maleki',\n    '\"You don\\'t know where you are without relativity.\" - Amir Maleki',\n    'Introducing infinity from a finite perspective',\n    'Someone\\'s entire life: memories, worries, hopes, dreams, fears, and decisions are all contained within the brain.',\n    'Almost all of your neurons form before your birth and may survive after your death. Treat them well.',\n    '\"Our unalterable resolution should be to be free.\" - Samuel Adams'\n  ];\n\n  var quote = quotes[Math.floor(Math.random() * quotes.length)];\n  console.log(quote)\n  return (<div id=\"quote\" onClick={handleRefresh}>{quote}</div>);\n}\n\n// var config = {\n//   showCube: false,\n//   dimension: '3D',\n//   velocity: 0.5,\n//   boundaryType: 'passthru',\n//   antialias: false,\n//   direction: {\n//     xMin: -1,\n//     xMax: 1,\n//     yMin: -1,\n//     yMax: 1,\n//     zMin: -1,\n//     zMax: 1\n//   },\n//   lines: {\n//     colorMode: 'solid',\n//     color: '#ffffff',\n//     transparency: 0.9,\n//     limitConnections: true,\n//     maxConnections: 20,\n//     minDistance: 300,\n//     visible: true\n//   },\n//   particles: {\n//     colorMode: 'solid',\n//     color: '#ed7e48',\n//     transparency: 0.9,\n//     shape: 'circle',\n//     boundingBox: 'canvas',\n//     count: 180,\n//     minSize: 10,\n//     maxSize: 45,\n//     visible: true\n//   },\n//   cameraControls: {\n//     enabled: true,\n//     enableDamping: true,\n//     dampingFactor: 0.2,\n//     enableZoom: true,\n//     autoRotate: true,\n//     autoRotateSpeed: 0.3,\n//     resetCameraFlag: false\n//   }\n// };\n\n// function changeParticleNum(){\n//   var w = window.innerWidth;\n//   var h = window.innerHeight;\n//   //console.log(w,h)\n//   //7372800\n//   //2073600\n//   //204800\n//   //250\n//   //180\n//   //90\n//   if (w*h > 100000){\n//     console.log(\"hello\")\n//     config.particles.count = -450+44*Math.log(w*h)\n//   } else {\n//     config.particles.count = 30\n//   }\n// }\n// changeParticleNum();\n\nfunction App() {\n  // useEffect(() => {\n  // }, []);\n  // window.addEventListener('resize', changeParticleNum)\n  return (\n    <div className=\"App\">\n      {/* <div id=\"particles\" style={{ height: \"100vh\", width: \"100%\" }}>\n      <ParticleField config={config} />;\n      </div> */}\n\n      <div id=\"particles\">\n        <Particles\n          params={{\n            particles: {\n              opacity: 1,\n              color: \"#ed7e48\",\n              number: {\n                value: 180\n              },\n              size: {\n                value: 5,\n                random: true\n              },\n              line_linked: {\n                distance: 200,\n              },\n              move: {\n                speed: 1\n              },\n            },\n            background: {\n              image: \"linear-gradient(135deg, #093f79 -100%, #093f79 50%)\"\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"repulse\"\n                }\n              }\n            }\n          }}\n        >\n        </Particles>\n      </div>\n\n\n\n      <div className=\"centerdock\">\n        <img id=\"logo\" src=\"Recursion Logo Full White Glow.svg\" alt=\"Recursion\"/>\n        <br></br>\n        <Quote />\n        <br></br>\n        <br></br>\n        <br></br>\n        <nav>\n          <ul>\n            <li><a href=\"https://www.linkedin.com/company/recursion-computing\"><img className=\"icon\" src=\"LinkedIn.svg\" alt=\"LinkedIn\" onClick={handleLinkedin} /></a></li>\n            <li><a href=\"https://github.com/recursion-computing\"><img className=\"icon\" src=\"GitHub.svg\" alt=\"GitHub\" onClick={handleGithub} /></a></li>\n            <li><a href=\"mailto:info@recursion.is\"><img className=\"icon\" src=\"Mail.svg\" alt=\"Email\" onClick={handleMail} /></a></li>\n            <li><a href=\"https://twitter.com/RecursionIs\"><img className=\"icon\" src=\"Twitter.svg\" alt=\"Twitter\" onClick={handleTwitter} /></a></li>\n            <li><a href=\"https://recursion.is/youtube\"><img className=\"iconorange\" src=\"YouTube.svg\" alt=\"YouTube\" onClick={handleYouTube} /></a></li>\n            <li><a href=\"https://publications.recursion.is\"><img className=\"icon\" src=\"Publications.svg\" alt=\"Publications\" onClick={handlePublications} /></a></li>\n            <li><a href=\"https://notes.recursion.is\"><img className=\"icon\" src=\"Notes.svg\" alt=\"Notes\" onClick={handleNotes} /></a></li>\n            <li><a href=\"https://discord.gg/2kSSsvTVc3\"><img className=\"icon\" src=\"Discord.svg\" alt=\"Discord\" onClick={handleDiscord} /></a></li>\n            <li><a href=\"https://nickmaleki.com\"><img className=\"icon\" src=\"Nick.svg\" alt=\"Nick\" onClick={handleNick} /></a></li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n// export default () => <ParticleField config={config} />;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}